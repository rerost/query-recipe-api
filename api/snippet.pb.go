// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snippet.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_type "github.com/rerost/query-recipe-api/api/type"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListSnippetsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSnippetsRequest) Reset()         { *m = ListSnippetsRequest{} }
func (m *ListSnippetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSnippetsRequest) ProtoMessage()    {}
func (*ListSnippetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac3012f17c95bf2, []int{0}
}

func (m *ListSnippetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSnippetsRequest.Unmarshal(m, b)
}
func (m *ListSnippetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSnippetsRequest.Marshal(b, m, deterministic)
}
func (m *ListSnippetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSnippetsRequest.Merge(m, src)
}
func (m *ListSnippetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSnippetsRequest.Size(m)
}
func (m *ListSnippetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSnippetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSnippetsRequest proto.InternalMessageInfo

type ListSnippetsResponse struct {
	Snippets             []*_type.Snippet `protobuf:"bytes,1,rep,name=snippets,proto3" json:"snippets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListSnippetsResponse) Reset()         { *m = ListSnippetsResponse{} }
func (m *ListSnippetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSnippetsResponse) ProtoMessage()    {}
func (*ListSnippetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac3012f17c95bf2, []int{1}
}

func (m *ListSnippetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSnippetsResponse.Unmarshal(m, b)
}
func (m *ListSnippetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSnippetsResponse.Marshal(b, m, deterministic)
}
func (m *ListSnippetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSnippetsResponse.Merge(m, src)
}
func (m *ListSnippetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSnippetsResponse.Size(m)
}
func (m *ListSnippetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSnippetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSnippetsResponse proto.InternalMessageInfo

func (m *ListSnippetsResponse) GetSnippets() []*_type.Snippet {
	if m != nil {
		return m.Snippets
	}
	return nil
}

type GetSnippetRequest struct {
	SnippetId            string   `protobuf:"bytes,1,opt,name=snippet_id,json=snippetId,proto3" json:"snippet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSnippetRequest) Reset()         { *m = GetSnippetRequest{} }
func (m *GetSnippetRequest) String() string { return proto.CompactTextString(m) }
func (*GetSnippetRequest) ProtoMessage()    {}
func (*GetSnippetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac3012f17c95bf2, []int{2}
}

func (m *GetSnippetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSnippetRequest.Unmarshal(m, b)
}
func (m *GetSnippetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSnippetRequest.Marshal(b, m, deterministic)
}
func (m *GetSnippetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSnippetRequest.Merge(m, src)
}
func (m *GetSnippetRequest) XXX_Size() int {
	return xxx_messageInfo_GetSnippetRequest.Size(m)
}
func (m *GetSnippetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSnippetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSnippetRequest proto.InternalMessageInfo

func (m *GetSnippetRequest) GetSnippetId() string {
	if m != nil {
		return m.SnippetId
	}
	return ""
}

type CreateSnippetRequest struct {
	Snippet              *_type.Snippet `protobuf:"bytes,1,opt,name=snippet,proto3" json:"snippet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateSnippetRequest) Reset()         { *m = CreateSnippetRequest{} }
func (m *CreateSnippetRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSnippetRequest) ProtoMessage()    {}
func (*CreateSnippetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac3012f17c95bf2, []int{3}
}

func (m *CreateSnippetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSnippetRequest.Unmarshal(m, b)
}
func (m *CreateSnippetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSnippetRequest.Marshal(b, m, deterministic)
}
func (m *CreateSnippetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSnippetRequest.Merge(m, src)
}
func (m *CreateSnippetRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSnippetRequest.Size(m)
}
func (m *CreateSnippetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSnippetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSnippetRequest proto.InternalMessageInfo

func (m *CreateSnippetRequest) GetSnippet() *_type.Snippet {
	if m != nil {
		return m.Snippet
	}
	return nil
}

type UpdateSnippetRequest struct {
	Snippet              *_type.Snippet `protobuf:"bytes,1,opt,name=snippet,proto3" json:"snippet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateSnippetRequest) Reset()         { *m = UpdateSnippetRequest{} }
func (m *UpdateSnippetRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSnippetRequest) ProtoMessage()    {}
func (*UpdateSnippetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac3012f17c95bf2, []int{4}
}

func (m *UpdateSnippetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSnippetRequest.Unmarshal(m, b)
}
func (m *UpdateSnippetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSnippetRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSnippetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSnippetRequest.Merge(m, src)
}
func (m *UpdateSnippetRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSnippetRequest.Size(m)
}
func (m *UpdateSnippetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSnippetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSnippetRequest proto.InternalMessageInfo

func (m *UpdateSnippetRequest) GetSnippet() *_type.Snippet {
	if m != nil {
		return m.Snippet
	}
	return nil
}

type DeleteSnippetRequest struct {
	SnippetId            string   `protobuf:"bytes,1,opt,name=snippet_id,json=snippetId,proto3" json:"snippet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSnippetRequest) Reset()         { *m = DeleteSnippetRequest{} }
func (m *DeleteSnippetRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSnippetRequest) ProtoMessage()    {}
func (*DeleteSnippetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac3012f17c95bf2, []int{5}
}

func (m *DeleteSnippetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSnippetRequest.Unmarshal(m, b)
}
func (m *DeleteSnippetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSnippetRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSnippetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSnippetRequest.Merge(m, src)
}
func (m *DeleteSnippetRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSnippetRequest.Size(m)
}
func (m *DeleteSnippetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSnippetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSnippetRequest proto.InternalMessageInfo

func (m *DeleteSnippetRequest) GetSnippetId() string {
	if m != nil {
		return m.SnippetId
	}
	return ""
}

func init() {
	proto.RegisterType((*ListSnippetsRequest)(nil), "rerost.query_recipe_api.ListSnippetsRequest")
	proto.RegisterType((*ListSnippetsResponse)(nil), "rerost.query_recipe_api.ListSnippetsResponse")
	proto.RegisterType((*GetSnippetRequest)(nil), "rerost.query_recipe_api.GetSnippetRequest")
	proto.RegisterType((*CreateSnippetRequest)(nil), "rerost.query_recipe_api.CreateSnippetRequest")
	proto.RegisterType((*UpdateSnippetRequest)(nil), "rerost.query_recipe_api.UpdateSnippetRequest")
	proto.RegisterType((*DeleteSnippetRequest)(nil), "rerost.query_recipe_api.DeleteSnippetRequest")
}

func init() { proto.RegisterFile("snippet.proto", fileDescriptor_8ac3012f17c95bf2) }

var fileDescriptor_8ac3012f17c95bf2 = []byte{
	// 445 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcb, 0x8a, 0xd4, 0x40,
	0x14, 0x25, 0x8a, 0x8f, 0xbe, 0x63, 0x84, 0x29, 0xe3, 0xd8, 0xc4, 0x07, 0x63, 0x40, 0x1c, 0x06,
	0x53, 0x05, 0x11, 0x37, 0xba, 0x10, 0x5f, 0x88, 0xe0, 0xaa, 0x07, 0x11, 0xdd, 0x84, 0xa4, 0x73,
	0x6d, 0x0b, 0x66, 0x52, 0x35, 0xa9, 0x4a, 0x43, 0x23, 0xad, 0xe8, 0x07, 0xb8, 0x71, 0xef, 0x4f,
	0xf9, 0x0b, 0x7e, 0x88, 0x74, 0xa5, 0xd2, 0x31, 0x76, 0xd2, 0x64, 0xe3, 0x32, 0x95, 0x3a, 0x8f,
	0xba, 0xe7, 0x70, 0xc1, 0x55, 0x39, 0x97, 0x12, 0x35, 0x95, 0x85, 0xd0, 0x82, 0x5c, 0x2b, 0xb0,
	0x10, 0x4a, 0xd3, 0xd3, 0x12, 0x8b, 0x45, 0x5c, 0xe0, 0x94, 0x4b, 0x8c, 0x13, 0xc9, 0xfd, 0x1b,
	0x33, 0x21, 0x66, 0xc7, 0xc8, 0x12, 0xc9, 0x59, 0x92, 0xe7, 0x42, 0x27, 0x9a, 0x8b, 0x5c, 0x55,
	0x30, 0xff, 0xba, 0xfd, 0x6b, 0xbe, 0xd2, 0xf2, 0x03, 0xc3, 0x13, 0xa9, 0x17, 0xf6, 0x27, 0xd1,
	0x0b, 0x89, 0xac, 0xa5, 0x13, 0x5c, 0x85, 0x2b, 0xaf, 0xb9, 0xd2, 0x47, 0xd5, 0xa1, 0x9a, 0xe0,
	0x69, 0x89, 0x4a, 0x07, 0xef, 0xc0, 0x6b, 0x1f, 0x2b, 0x29, 0x72, 0x85, 0xe4, 0x09, 0x5c, 0xb4,
	0x78, 0x35, 0x76, 0xf6, 0xcf, 0x1e, 0xec, 0x44, 0x77, 0x68, 0x8f, 0x53, 0xba, 0x52, 0xa3, 0x96,
	0x61, 0xb2, 0x86, 0x05, 0x11, 0xec, 0xbe, 0xc4, 0x9a, 0xd9, 0xea, 0x91, 0x9b, 0x00, 0xf6, 0x42,
	0xcc, 0xb3, 0xb1, 0xb3, 0xef, 0x1c, 0x8c, 0x26, 0x23, 0x7b, 0xf2, 0x2a, 0x0b, 0xde, 0x82, 0xf7,
	0xac, 0xc0, 0x44, 0xe3, 0x3f, 0xb0, 0xc7, 0x70, 0xc1, 0x5e, 0x32, 0x98, 0xc1, 0x6e, 0x6a, 0xd4,
	0x8a, 0xf8, 0x8d, 0xcc, 0xfe, 0x03, 0xf1, 0x03, 0xf0, 0x9e, 0xe3, 0x31, 0x6e, 0x10, 0x6f, 0x7f,
	0x68, 0xf4, 0xf3, 0x1c, 0x5c, 0xb6, 0x88, 0x23, 0x2c, 0xe6, 0x7c, 0x8a, 0xe4, 0x33, 0x5c, 0xfa,
	0x3b, 0x0a, 0x72, 0xaf, 0xd7, 0x49, 0x47, 0x90, 0x7e, 0x38, 0xf0, 0x76, 0x95, 0x6f, 0xb0, 0xfb,
	0xed, 0xd7, 0xef, 0x1f, 0x67, 0x76, 0xc8, 0xa8, 0xae, 0x89, 0x22, 0x5f, 0x00, 0x9a, 0xbc, 0xc8,
	0x61, 0x2f, 0xdf, 0x46, 0xa8, 0xfe, 0xb0, 0x99, 0x05, 0xb7, 0x8c, 0xe6, 0x98, 0xec, 0xad, 0x35,
	0xd9, 0xa7, 0x66, 0x46, 0x4b, 0xf2, 0xd5, 0x01, 0xb7, 0x95, 0x3e, 0xe9, 0x7f, 0x54, 0x57, 0x4b,
	0x86, 0xfa, 0xf0, 0x8d, 0x0f, 0x2f, 0x68, 0xde, 0xfe, 0xb0, 0x8e, 0x93, 0x7c, 0x77, 0xc0, 0x6d,
	0x15, 0x65, 0x8b, 0x87, 0xae, 0x42, 0x0d, 0xf5, 0x70, 0xd7, 0x78, 0xb8, 0x1d, 0x75, 0xcc, 0x82,
	0xf2, 0x6c, 0xd9, 0x18, 0x9a, 0x83, 0xdb, 0xea, 0xd7, 0x16, 0x3f, 0x5d, 0x3d, 0xf4, 0xf7, 0x68,
	0xb5, 0x29, 0x68, 0xbd, 0x29, 0xe8, 0x8b, 0xd5, 0xa6, 0xa8, 0xc3, 0x38, 0xec, 0x09, 0xe3, 0x29,
	0x7b, 0x1f, 0xce, 0xb8, 0xfe, 0x58, 0xa6, 0x74, 0x2a, 0x4e, 0x58, 0x25, 0xc9, 0x8c, 0x64, 0x58,
	0x49, 0x86, 0x66, 0x31, 0x49, 0xfe, 0x28, 0x91, 0x3c, 0x96, 0x69, 0x7a, 0xde, 0x08, 0xdc, 0xff,
	0x13, 0x00, 0x00, 0xff, 0xff, 0x02, 0x3b, 0xb5, 0x56, 0xe0, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SnippetServiceClient is the client API for SnippetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SnippetServiceClient interface {
	ListSnippets(ctx context.Context, in *ListSnippetsRequest, opts ...grpc.CallOption) (*ListSnippetsResponse, error)
	GetSnippet(ctx context.Context, in *GetSnippetRequest, opts ...grpc.CallOption) (*_type.Snippet, error)
	CreateSnippet(ctx context.Context, in *CreateSnippetRequest, opts ...grpc.CallOption) (*_type.Snippet, error)
	UpdateSnippet(ctx context.Context, in *UpdateSnippetRequest, opts ...grpc.CallOption) (*_type.Snippet, error)
	DeleteSnippet(ctx context.Context, in *DeleteSnippetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type snippetServiceClient struct {
	cc *grpc.ClientConn
}

func NewSnippetServiceClient(cc *grpc.ClientConn) SnippetServiceClient {
	return &snippetServiceClient{cc}
}

func (c *snippetServiceClient) ListSnippets(ctx context.Context, in *ListSnippetsRequest, opts ...grpc.CallOption) (*ListSnippetsResponse, error) {
	out := new(ListSnippetsResponse)
	err := c.cc.Invoke(ctx, "/rerost.query_recipe_api.SnippetService/ListSnippets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snippetServiceClient) GetSnippet(ctx context.Context, in *GetSnippetRequest, opts ...grpc.CallOption) (*_type.Snippet, error) {
	out := new(_type.Snippet)
	err := c.cc.Invoke(ctx, "/rerost.query_recipe_api.SnippetService/GetSnippet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snippetServiceClient) CreateSnippet(ctx context.Context, in *CreateSnippetRequest, opts ...grpc.CallOption) (*_type.Snippet, error) {
	out := new(_type.Snippet)
	err := c.cc.Invoke(ctx, "/rerost.query_recipe_api.SnippetService/CreateSnippet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snippetServiceClient) UpdateSnippet(ctx context.Context, in *UpdateSnippetRequest, opts ...grpc.CallOption) (*_type.Snippet, error) {
	out := new(_type.Snippet)
	err := c.cc.Invoke(ctx, "/rerost.query_recipe_api.SnippetService/UpdateSnippet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snippetServiceClient) DeleteSnippet(ctx context.Context, in *DeleteSnippetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rerost.query_recipe_api.SnippetService/DeleteSnippet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SnippetServiceServer is the server API for SnippetService service.
type SnippetServiceServer interface {
	ListSnippets(context.Context, *ListSnippetsRequest) (*ListSnippetsResponse, error)
	GetSnippet(context.Context, *GetSnippetRequest) (*_type.Snippet, error)
	CreateSnippet(context.Context, *CreateSnippetRequest) (*_type.Snippet, error)
	UpdateSnippet(context.Context, *UpdateSnippetRequest) (*_type.Snippet, error)
	DeleteSnippet(context.Context, *DeleteSnippetRequest) (*empty.Empty, error)
}

// UnimplementedSnippetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSnippetServiceServer struct {
}

func (*UnimplementedSnippetServiceServer) ListSnippets(ctx context.Context, req *ListSnippetsRequest) (*ListSnippetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSnippets not implemented")
}
func (*UnimplementedSnippetServiceServer) GetSnippet(ctx context.Context, req *GetSnippetRequest) (*_type.Snippet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSnippet not implemented")
}
func (*UnimplementedSnippetServiceServer) CreateSnippet(ctx context.Context, req *CreateSnippetRequest) (*_type.Snippet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSnippet not implemented")
}
func (*UnimplementedSnippetServiceServer) UpdateSnippet(ctx context.Context, req *UpdateSnippetRequest) (*_type.Snippet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSnippet not implemented")
}
func (*UnimplementedSnippetServiceServer) DeleteSnippet(ctx context.Context, req *DeleteSnippetRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSnippet not implemented")
}

func RegisterSnippetServiceServer(s *grpc.Server, srv SnippetServiceServer) {
	s.RegisterService(&_SnippetService_serviceDesc, srv)
}

func _SnippetService_ListSnippets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSnippetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnippetServiceServer).ListSnippets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rerost.query_recipe_api.SnippetService/ListSnippets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnippetServiceServer).ListSnippets(ctx, req.(*ListSnippetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnippetService_GetSnippet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSnippetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnippetServiceServer).GetSnippet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rerost.query_recipe_api.SnippetService/GetSnippet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnippetServiceServer).GetSnippet(ctx, req.(*GetSnippetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnippetService_CreateSnippet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSnippetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnippetServiceServer).CreateSnippet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rerost.query_recipe_api.SnippetService/CreateSnippet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnippetServiceServer).CreateSnippet(ctx, req.(*CreateSnippetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnippetService_UpdateSnippet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSnippetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnippetServiceServer).UpdateSnippet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rerost.query_recipe_api.SnippetService/UpdateSnippet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnippetServiceServer).UpdateSnippet(ctx, req.(*UpdateSnippetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnippetService_DeleteSnippet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSnippetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnippetServiceServer).DeleteSnippet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rerost.query_recipe_api.SnippetService/DeleteSnippet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnippetServiceServer).DeleteSnippet(ctx, req.(*DeleteSnippetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SnippetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rerost.query_recipe_api.SnippetService",
	HandlerType: (*SnippetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListSnippets",
			Handler:    _SnippetService_ListSnippets_Handler,
		},
		{
			MethodName: "GetSnippet",
			Handler:    _SnippetService_GetSnippet_Handler,
		},
		{
			MethodName: "CreateSnippet",
			Handler:    _SnippetService_CreateSnippet_Handler,
		},
		{
			MethodName: "UpdateSnippet",
			Handler:    _SnippetService_UpdateSnippet_Handler,
		},
		{
			MethodName: "DeleteSnippet",
			Handler:    _SnippetService_DeleteSnippet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "snippet.proto",
}
